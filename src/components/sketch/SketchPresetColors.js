// Generated by CoffeeScript 0.1.6
import React from 'react';

import PropTypes from 'prop-types';

import reactCSS from 'reactcss';

import {
  Swatch
} from '../common';

export var SketchPresetColors = function({colors, onClick = function() {
      return {};
    }, onSwatchHover}) {
  var color, handleClick, styles, swatch, swatchWrap;
  styles = reactCSS({
    default: {
      colors: {
        margin: '0 -10px',
        padding: '10px 0 0 10px',
        borderTop: '1px solid #eee',
        display: 'flex',
        flexWrap: 'wrap',
        position: 'relative'
      },
      swatchWrap: {
        width: '16px',
        height: '16px',
        margin: '0 10px 10px 0'
      },
      swatch: {
        borderRadius: '3px',
        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15)'
      }
    },
    'no-presets': {
      colors: {
        display: 'none'
      }
    }
  }, {
    'no-presets': !(colors != null ? colors.length : void 0)
  });
  ({swatchWrap, swatch} = styles);
  handleClick = function(hex, e) {
    return onClick({
      hex,
      source: 'hex'
    }, e);
  };
  return <div className='flexbox-fix' style={styles.colors}>
    {(function() {
      var i, len, results;
      results = [];
      for (i = 0, len = colors.length; i < len; i++) {
        color = colors[i];
        if (typeof color === 'string') {
          color = {color};
        }
        results.push(<div key={color.color} style={swatchWrap}>
          <Swatch {...color} onClick={handleClick} onHover={onSwatchHover} focusStyle={{
            boxShadow: `inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ${color.color}`
          }} style={swatch}></Swatch>
        </div>);
      }
      return results;
    })()}
  </div>;
};

SketchPresetColors.propTypes = {
  colors: PropTypes.arrayOf(PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.shape({
      color: PropTypes.string,
      title: PropTypes.string
    })
  ]))
};

export default SketchPresetColors;
